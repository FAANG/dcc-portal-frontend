export const indexFieldsData = {
  'analysis': {
    joinIndices: ['article', 'dataset', 'experiment', 'specimen'],
    fields: [
      'accession',
      'project',
      'secondaryProject',
      'title',
      'alias',
      'description',
      'standardMet',
      'versionLastStandardMet',
      'releaseDate',
      'updateDate',
      'organism.text',
      'type',
      'datasetAccession',
      'datasetInPortal',
      'sampleAccessions',
      'experimentAccessions',
      'runAccessions',
      'analysisAccessions',
      'files.name',
      'files.url',
      'files.type',
      'files.size',
      'files.checksumMethod',
      'files.checksum',
      'analysisDate.text',
      'analysisDate.unit',
      'assayType',
      'analysisProtocol.url',
      'analysisProtocol.filename',
      'analysisType',
      'referenceGenome',
      'analysisCenter',
      'analysisCodeRepository',
      'experimentType',
      'program',
      'platform',
      'imputation'
    ],
    defaults: [
      'accession',
      'datasetAccession',
      'title',
      'organism.text',
      'assayType',
      'analysisType',
      'standardMet'
    ],
    primary: 'accession',
    links: {
      'analysis.accession': 'analysis'
    },
    ontologyTermsLink: {
      'analysis.organism.text': 'analysis.organism.ontologyTerms'
    },
    queryName: 'allAnalysis',
    celeryQueryName: 'allAnalysisAsTask',
    resultQueryName: 'allAnalysisTaskResult'
  },
  'article': {
    joinIndices: ['analysis', 'dataset', 'file', 'specimen'],
    fields: [
      'pmcId',
      'pubmedId',
      'doi',
      'title',
      'authorString',
      'journal',
      'issue',
      'volume',
      'year',
      'pages',
      'isOpenAccess',
      'datasetSource',
      'relatedDatasets.accession',
      'relatedDatasets.standardMet',
      'relatedDatasets.species',
      'secondaryProject'
    ],
    defaults: [
      'title',
      'year',
      'datasetSource',
      'journal'
    ],
    primary: 'pmcId',
    links: {
      'article.pmcId': 'article'
    },
    queryName: 'allArticles',
    celeryQueryName: 'allArticlesAsTask',
    resultQueryName: 'allArticlesTaskResult'
  },
  'dataset': {
    joinIndices: ['analysis', 'article', 'experiment', 'file', 'specimen'],
    fields: [
      'accession',
      'standardMet',
      'secondaryProject',
      'title',
      'alias',
      'assayType',
      'tech',
      'secondaryAccession',
      'archive',
      'specimen.biosampleId',
      'specimen.material.text',
      'specimen.cellType.text',
      'specimen.organism.text',
      'specimen.sex.text',
      'specimen.breed.text',
      'species.text',
      'releaseDate',
      'updateDate',
      'file.url',
      'file.name',
      'file.fileId',
      'file.experiment',
      'file.type',
      'file.size',
      'file.readableSize',
      'file.archive',
      'file.readCount',
      'file.baseCount',
      'file.checksumMethod',
      'file.checksum',
      'experiment.accession',
      'experiment.target',
      'experiment.assayType',
      'instrument',
      'centerName',
      'paperPublished',
      'publishedArticles.articleId',
      'publishedArticles.title',
      'publishedArticles.year',
      'publishedArticles.journal',
      'submitterEmail'
    ],
    defaults: [
      'accession',
      'title',
      'species.text',
      'archive',
      'assayType',
      'standardMet',
      'paperPublished'
    ],
    primary: 'accession',
    links: {
      'dataset.accession': 'dataset'
    },
    ontologyTermsLink: {
      'dataset.specimen.material.text': 'dataset.specimen.material.ontologyTerms',
      'dataset.specimen.cellType.text': 'dataset.specimen.cellType.ontologyTerms',
      'dataset.specimen.organism.text': 'dataset.specimen.organism.ontologyTerms',
      'dataset.specimen.sex.text': 'dataset.specimen.sex.ontologyTerms',
      'dataset.specimen.breed.text': 'dataset.specimen.breed.ontologyTerms',
      'dataset.species.text': 'dataset.species.ontologyTerms'
    },
    queryName: 'allDatasets',
    celeryQueryName: 'allDatasetsAsTask',
    resultQueryName: 'allDatasetsTaskResult'
  },
  'experiment': {
    joinIndices: ['analysis', 'dataset', 'file'],
    fields: [
      'accession',
      'project',
      'secondaryProject',
      'assayType',
      'experimentTarget',
      'standardMet',
      'versionLastStandardMet',
      'libraryName',
      'sampleStorage',
      'sampleStorageProcessing',
      'samplingToPreparationInterval.text',
      'samplingToPreparationInterval.unit',
      'experimentalProtocol.url',
      'experimentalProtocol.filename',
      'extractionProtocol.url',
      'extractionProtocol.filename',
      'libraryPreparationLocation',
      'libraryPreparationLocationLongitude.text',
      'libraryPreparationLocationLongitude.unit',
      'libraryPreparationLocationLatitude.text',
      'libraryPreparationLocationLatitude.unit',
      'libraryPreparationDate.text',
      'libraryPreparationDate.unit',
      'sequencingLocation',
      'sequencingLocationLongitude.text',
      'sequencingLocationLongitude.unit',
      'sequencingLocationLatitude.text',
      'sequencingLocationLatitude.unit',
      'sequencingDate.text',
      'sequencingDate.unit',
      'ATACSeq.transposaseProtocol.url',
      'ATACSeq.transposaseProtocol.filename',
      'BsSeq.librarySelection',
      'BsSeq.bisulfiteConversionProtocol.url',
      'BsSeq.bisulfiteConversionProtocol.filename',
      'BsSeq.pcrProductIsolationProtocol.url',
      'BsSeq.pcrProductIsolationProtocol.filename',
      'BsSeq.bisulfiteConversionPercent',
      'BsSeq.restrictionEnzyme',
      'BsSeq.maxFragmentSizeSelectionRange',
      'BsSeq.minFragmentSizeSelectionRange',
      'ChIPSeqDnaBinding.chipProtocol.url',
      'ChIPSeqDnaBinding.chipProtocol.filename',
      'ChIPSeqDnaBinding.chipTarget',
      'ChIPSeqDnaBinding.controlExperiment',
      'ChIPSeqDnaBinding.chipAntibodyProvider',
      'ChIPSeqDnaBinding.chipAntibodyCatalog',
      'ChIPSeqDnaBinding.chipAntibodyLot',
      'ChIPSeqDnaBinding.libraryGenerationMaxFragmentSizeRange',
      'ChIPSeqDnaBinding.libraryGenerationMinFragmentSizeRange',
      'ChIPSeqInputDNA.chipProtocol.url',
      'ChIPSeqInputDNA.chipProtocol.filename',
      'ChIPSeqInputDNA.libraryGenerationMaxFragmentSizeRange',
      'ChIPSeqInputDNA.libraryGenerationMinFragmentSizeRange',
      'DNaseSeq.dnaseProtocol.url',
      'DNaseSeq.dnaseProtocol.filename',
      'HiC.restrictionEnzyme',
      'HiC.restrictionSite',
      'HiC.hiCProtocol.url',
      'HiC.hiCProtocol.filename',
      'RNASeq.rnaPreparation3AdapterLigationProtocol.url',
      'RNASeq.rnaPreparation3AdapterLigationProtocol.filename',
      'RNASeq.rnaPreparation5AdapterLigationProtocol.url',
      'RNASeq.rnaPreparation5AdapterLigationProtocol.filename',
      'RNASeq.libraryGenerationPcrProductIsolationProtocol.url',
      'RNASeq.libraryGenerationPcrProductIsolationProtocol.filename',
      'RNASeq.preparationReverseTranscriptionProtocol.url',
      'RNASeq.preparationReverseTranscriptionProtocol.filename',
      'RNASeq.libraryGenerationProtocol.url',
      'RNASeq.libraryGenerationProtocol.filename',
      'RNASeq.readStrand',
      'RNASeq.rnaPurity260280ratio',
      'RNASeq.rnaPurity260230ratio',
      'RNASeq.rnaIntegrityNumber',
      'WGS.libraryGenerationPcrProductIsolationProtocol.url',
      'WGS.libraryGenerationPcrProductIsolationProtocol.filename',
      'WGS.libraryGenerationProtocol.url',
      'WGS.libraryGenerationProtocol.filename',
      'WGS.librarySelection',
      'CAGESeq.cageProtocol.url',
      'CAGESeq.cageProtocol.filename',
      'CAGESeq.sequencingPrimerProvider',
      'CAGESeq.sequencingPrimerCatalog',
      'CAGESeq.sequencingPrimerLot',
      'CAGESeq.restrictionEnzymeTargetSequence',
      'CAGESeq.rnaPurity260280ratio',
      'CAGESeq.rnaPurity260230ratio',
      'CAGESeq.rnaIntegrityNumber'
    ],
    defaults: [
      'accession',
      'assayType',
      'experimentTarget',
      'standardMet'
    ],
    primary: 'accession',
    links: {
      'experiment.accession': 'experiment'
    },
    queryName: 'allExperiments',
    celeryQueryName: 'allExperimentsAsTask',
    resultQueryName: 'allExperimentsTaskResult'
  },
  'file': {
    joinIndices: ['article', 'dataset', 'experiment', 'organism', 'specimen', 'protocolFiles', 'protocolSamples'],
    fields: [
      'specimen',
      'organism',
      'species.text',
      'url',
      'name',
      'secondaryProject',
      'type',
      'size',
      'readableSize',
      'checksum',
      'checksumMethod',
      'archive',
      'readCount',
      'baseCount',
      'releaseDate',
      'updateDate',
      'submission',
      'experiment.accession',
      'experiment.target',
      'experiment.assayType',
      'experiment.standardMet',
      'study.accession',
      'study.alias',
      'study.type',
      'study.secondaryAccession',
      'study.title',
      'run.accession',
      'run.alias',
      'run.platform',
      'run.instrument',
      'run.centerName',
      'run.sequencingDate',
      'run.sequencingLocation',
      'run.sequencingLatitude',
      'run.sequencingLongitude',
      'paperPublished',
      'publishedArticles.articleId',
      'publishedArticles.title',
      'publishedArticles.year',
      'publishedArticles.journal',
      'publishedArticles.doi',
      'publishedArticles.pubmedId',
      'submitterEmail'
    ],
    defaults: [
      'name',
      'study.accession',
      'experiment.accession',
      'species.text',
      'experiment.assayType',
      'experiment.target',
      'specimen',
      'run.instrument',
      'experiment.standardMet',
      'paperPublished'
    ],
    primary: 'name',
    links: {
      'file.name': 'file'
    },
    ontologyTermsLink: {
      'file.species.text': 'file.species.ontologyTerms',
    },
    queryName: 'allFiles',
    celeryQueryName: 'allFilesAsTask',
    resultQueryName: 'allFilesTaskResult'
  },
  'organism': {
    joinIndices: ['file', 'specimen', 'protocolSamples'],
    fields: [
      'biosampleId',
      'idNumber',
      'alternativeId',
      'etag',
      'name',
      'description',
      'releaseDate',
      'updateDate',
      'standardMet',
      'versionLastStandardMet',
      'project',
      'secondaryProject',
      'organization.name',
      'organization.role',
      'organization.URL',
      'material.text',
      'availability',
      'organism.text',
      'sex.text',
      'breed.text',
      'birthDate.text',
      'birthDate.unit',
      'healthStatus.text',
      'birthLocation',
      'birthLocationLongitude.text',
      'birthLocationLongitude.unit',
      'birthLocationLatitude.text',
      'birthLocationLatitude.unit',
      'birthWeight.text',
      'birthWeight.unit',
      'placentalWeight.text',
      'placentalWeight.unit',
      'pregnancyLength.text',
      'pregnancyLength.unit',
      'deliveryTiming',
      'deliveryEase',
      'childOf',
      'pedigree',
      'paperPublished',
      'publishedArticles.articleId',
      'publishedArticles.title',
      'publishedArticles.year',
      'publishedArticles.journal'
    ],
    defaults: [
      'biosampleId',
      'sex.text',
      'organism.text',
      'breed.text',
      'standardMet',
      'paperPublished'
    ],
    primary: 'biosampleId',
    links: {
      'organism.biosampleId': 'organism'
    },
    ontologyTermsLink: {
      'organism.material.text': 'organism.material.ontologyTerms',
      'organism.organism.text': 'organism.organism.ontologyTerms',
      'organism.sex.text': 'organism.sex.ontologyTerms',
      'organism.breed.text': 'organism.breed.ontologyTerms',
      'organism.healthStatus.text': 'organism.healthStatus.ontologyTerms',
    },
    queryName: 'allOrganisms',
    celeryQueryName: 'allOrganismsAsTask',
    resultQueryName: 'allOrganismsTaskResult'
  },
  'specimen': {
    joinIndices: ['analysis', 'article', 'dataset', 'file', 'protocolSamples', 'organism'],
    fields: [
      'biosampleId',
      'idNumber',
      'alternativeId',
      'etag',
      'name',
      'description',
      'releaseDate',
      'updateDate',
      'standardMet',
      'versionLastStandardMet',
      'project',
      'secondaryProject',
      'organization.name',
      'organization.role',
      'organization.URL',
      'material.text',
      'derivedFrom',
      'allDeriveFromSpecimens',
      'availability',
      'cellType.text',
      'organism.biosampleId',
      'organism.organism.text',
      'organism.sex.text',
      'organism.breed.text',
      'organism.healthStatus.text',
      'trackhubUrl'
    ],
    defaults:
      [
        'biosampleId',
        'material.text',
        'cellType.text',
        'organism.sex.text',
        'organism.organism.text',
        'organism.breed.text',
        'standardMet',
        'paperPublished'
      ],
    primary: 'biosampleId',
    links: {
      'specimen.biosampleId': 'specimen'
    },
    ontologyTermsLink: {
      'specimen.material.text': 'specimen.material.ontologyTerms',
      'specimen.cellType.text': 'specimen.cellType.ontologyTerms',
      'specimen.organism.organism.text': 'specimen.organism.organism.ontologyTerms',
      'specimen.organism.sex.text': 'specimen.organism.sex.ontologyTerms',
      'specimen.organism.breed.text': 'specimen.organism.breed.ontologyTerms',
      'specimen.organism.healthStatus.text': 'specimen.organism.healthStatus.ontologyTerms',

    },
    queryName: 'allSpecimens',
    celeryQueryName: 'allSpecimensAsTask',
    resultQueryName: 'allSpecimensTaskResult'
  },
  'protocolAnalysis': {
    joinIndices: ['analysis'],
    fields: [
      'universityName',
      'protocolDate',
      'protocolName',
      'key',
      'url',
      'analyses.accession',
      'analyses.organism',
      'analyses.datasetAccession',
      'analyses.analysisType'
    ],
    defaults: [
      'analyses.analysisType',
      'protocolName',
      'key',
      'universityName',
      'protocolDate'
    ],
    primary: 'key',
    links: {
      'protocolAnalysis.key': 'protocol/analysis'
    },
    queryName: 'allProtocolAnalysis',
    celeryQueryName: 'allProtocolAnalysisAsTask',
    resultQueryName: 'allProtocolAnalysisTaskResult'

  },
  'protocolFiles': {
    joinIndices: ['file'],
    fields: [
      'name',
      'experimentTarget',
      'assayType',
      'key',
      'url',
      'secondaryProject',
      'filename',
      'experiments.accession',
      'experiments.sampleStorage',
      'experiments.sampleStorageProcessing'
    ],
    defaults: [
      'name',
      'experimentTarget',
      'assayType'
    ],
    primary: 'key',
    links: {
      'protocolFiles.key': 'protocol/experiments'
    },
    queryName: 'allProtocolFiles',
    celeryQueryName: 'allProtocolFilesAsTask',
    resultQueryName: 'allProtocolFilesTaskResult'
  },
  'protocolSamples': {
    joinIndices: ['file', 'organism', 'specimen'],
    fields: [
      'universityName',
      'protocolDate',
      'protocolName',
      'key',
      'url',
      'specimens.id',
      'specimens.organismPartCellType',
      'specimens.organism',
      'specimens.breed',
      'specimens.derivedFrom'
    ],
    defaults: [
      'protocolName',
      'key',
      'universityName',
      'protocolDate'
    ],
    primary: 'key',
    links: {
      'protocolSamples.key': 'protocol/samples'
    },
    queryName: 'allProtocolSamples',
    celeryQueryName: 'allProtocolSamplesAsTask',
    resultQueryName: 'allProtocolSamplesTaskResult'
  },
};
